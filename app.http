# Register a new user
POST http://localhost:8000/api/auth/register
Content-Type: application/json

{
  "fullName": "Moses Mwabe",
  "email": "mosesmwabe@gmail.com",
  "password": "MOSESMWABE",
  "dateOfBirth": "2002-10-12",
  "gender": "male",
  "height": 150,
  "weight": 80,
  "role": "user",
  "fitnessGoal": "weight_loss",
  "experienceLevel": "beginner",
  "preferredWorkoutType": "home",
  "activityLevel": "sedentary",
  "medicalConditions": "none",
  "dietaryRestrictions": "milk allergy"
}

###
# Login
POST http://localhost:8000/api/auth/login
Content-Type: application/json

{
  "email": "nancymuthoni@gmail.com",
  "password": "nancy123456"
}





###
# Get all users (admin only)
GET http://localhost:8000/api/users
#Authorization: Bearer <admin-token>

###
# Get user by ID (admin or self)
GET http://localhost:8000/api/users/1
#Authorization: Bearer <user-token>

###
# Create new user (registration)
POST http://localhost:8000/api/users
Content-Type: application/json

{
  "fullName": "Hildah Wambui",
  "email": "hildahwambui@gmail.com",
  "password": "hildahwambui",
  "dateOfBirth": "1990-01-01",
  "gender": "female",
  "height": 175,
  "weight": 75,
  "fitnessGoal": "muscle_gain",
  "experienceLevel": "intermediate",
  "preferredWorkoutType": "gym",
  "activityLevel": "moderately active",
  "medicalConditions": "None",
  "dietaryRestrictions": "None"
}

###
# Update user (self or admin)
PUT http://localhost:8000/api/users/32
#Authorization: Bearer <user-token>
Content-Type: application/json

{
  "fullName": "Hildah Wambui",
  "email": "hildahwambui@gmail.com",
  "password": "hildahwambui",
  "dateOfBirth": "1990-01-01",
  "gender": "female",
  "height": 140,
  "weight": 40,
  "role": "user",
  "fitnessGoal": "muscle_gain",
  "experienceLevel": "beginner",
  "preferredWorkoutType": "home",
  "activityLevel": "very_active"
}

###
# Delete user (admin only)
DELETE http://localhost:3000/api/users/1
#Authorization: Bearer <admin-token>


//exercise library
###
# Get all exercises
GET http://localhost:8000/api/exercises

###
# Get exercise by ID
GET http://localhost:8000/api/exercises/3

###
# Create new exercise
POST http://localhost:8000/api/exercises
Content-Type: application/json

{
  "name": "Barbell Bench Press",
  "description": "A compound exercise that primarily targets the chest muscles",
  "targetMuscleGroup": "chest",
  "equipment": "barbell, bench",
  "difficulty": "intermediate",
  "workoutType": "gym",
  "videoUrl": "https://example.com/bench-press-tutorial",
  "imageUrl": "https://example.com/bench-press-form",
  "caloriesBurnRate": 8.5,
  "instructions": "1. Lie on the bench\n2. Grip the barbell slightly wider than shoulder width\n3. Lower the bar to your chest\n4. Press the bar back up to the starting position"
}

###
# Update exercise
PUT http://localhost:8000/api/exercises/1
Content-Type: application/json

{
  "name": "Bench Press",
  "description": "Classic chest exercise",
  "targetMuscleGroup": "chest",
  "equipment": "barbell, bench",
  "difficulty": "intermediate",
  "workoutType": "gym",
  "videoUrl": "https://example.com/bench-press-tutorial-updated",
  "imageUrl": "https://example.com/bench-press-form-updated",
  "caloriesBurnRate": 9.0,
  "instructions": "Lie on bench, lower bar to chest, push up"
}

###
# Delete exercise
DELETE http://localhost:8000/api/exercises/1


//workout plans
###
# Get all workout plans for a user
GET http://localhost:8000/api/workout-plans/24

###
# Get a workout plan by ID
GET http://localhost:8000/api/workout-plans/3

###
# Create a new workout plan
POST http://localhost:8000/api/workout-plans
Content-Type: application/json

{
  "userId": 4,
  "name": "Strength Training Plan",
  "description": "Focuses on building muscle mass",
  "goal": "muscle_gain",
  "difficulty": "intermediate",
  "durationWeeks": 12,
  "isAiGenerated": false,
  "workoutType": "gym"
}

###
# Update a workout plan
PUT http://localhost:8000/api/workout-plans/5
Content-Type: application/json

{
  "userId": 4,
  "name": "Updated Strength Training Plan",
  "description": "Modified to focus more on compound exercises",
  "goal": "muscle_gain",
  "difficulty": "advanced",
  "durationWeeks": 12,
  "isAiGenerated": false,
  "workoutType": "gym"
}

###
# Delete a workout plan
DELETE http://localhost:8000/api/workout-plans/123


// workout sessions
###
# Get all workout sessions
GET http://localhost:8000/api/workout-sessions

###
# Get workout session by ID
GET http://localhost:8000/api/workout-sessions/1

###
# Get workout sessions by plan ID
GET http://localhost:8000/api/workout-plans/1/sessions

###
# Create new workout session
POST http://localhost:8000/api/workout-sessions
Content-Type: application/json

{
  "planId": 1,
  "dayNumber": 4,
  "name": "Upper Body Strength",
  "description": "Focus on chest, shoulders, and triceps",
  "targetMuscleGroups": "chest, shoulders, triceps",
  "duration": 60
}

###
# Update workout session
PUT http://localhost:8000/api/workout-sessions/4
Content-Type: application/json

{
  "planId": 1,
  "dayNumber": 1,
  "name": "Upper Body Power",
  "description": "Heavy focus on chest and shoulders",
  "targetMuscleGroups": "chest, shoulders, triceps",
  "duration": 75
}

###
# Delete workout session
DELETE http://localhost:8000/api/workout-sessions/4


//workout exercises
###
# Get all workout exercises
GET http://localhost:8000/api/workout-exercises

###
# Get workout exercise by ID
GET http://localhost:8000/api/workout-exercises/3

###
# Get workout exercises by session ID
GET http://localhost:8000/api/workout-sessions/1/exercises

###
# Create new workout exercise
POST http://localhost:8000/api/workout-exercises
Content-Type: application/json

{
  "sessionId": 1,
  "exerciseId": 1,
  "sets": 3,
  "reps": 12,
  "restPeriod": 60,
  "order": 1
}

###
# Update workout exercise
PUT http://localhost:8000/api/workout-exercises/13
Content-Type: application/json

{
  "sessionId": 1,
  "exerciseId": 1,
  "sets": 4,
  "reps": 10,
  "restPeriod": 90,
  "order": 1
}

###
# Delete workout exercise
DELETE http://localhost:8000/api/workout-exercises/13


//nutrition plans
###
# Get all nutrition plans
GET http://localhost:8000/api/nutrition-plans

###
# Get nutrition plans for a specific user
GET http://localhost:8000/api/nutrition-plans?userId=24

###
# Get nutrition plan by ID
GET http://localhost:8000/api/nutrition-plans/6

###
# Create new nutrition plan
POST http://localhost:8000/api/nutrition-plans
Content-Type: application/json

{
  "goal": "muscle_gain",
  "dailyCalories": 3000,
  "proteinGrams": 180,
  "carbsGrams": 375,
  "fatGrams": 83,
  "mealsPerDay": 5,
  "isAiGenerated": false,
  "restrictions": "Lactose intolerant"
}

###
# Update nutrition plan
PUT http://localhost:8000/api/nutrition-plans/14
Content-Type: application/json

{
  "goal": "weight_loss",
  "dailyCalories": 2500,
  "proteinGrams": 150,
  "carbsGrams": 250,
  "fatGrams": 70,
  "mealsPerDay": 4,
  "restrictions": "Vegetarian"
}

###
# Delete nutrition plan
DELETE http://localhost:8000/api/nutrition-plans/14




//Meal Plans 
###
# Get all meal plans
GET http://localhost:8000/api/meal-plans

### Get meal plan by ID
GET http://localhost:8000/api/meal-plans/425

### Get meal plans by nutrition plan ID
GET http://localhost:8000/api/nutrition-plans/11/meal-plans

### Create a new meal plan
POST http://localhost:8000/api/meal-plans
Content-Type: application/json

{
  "nutritionPlanId": 13,
  "dayNumber": 1,
  "mealTime": "breakfast",
  "name": "High Protein Breakfast Bowl",
  "description": "A nutritious breakfast with high protein content",
  "calories": 400,
  "protein": 30,
  "carbs": 30,
  "fat": 15,
  "recipe": "Mix Greek yogurt, protein powder, berries, and nuts. Top with chia seeds."
}

### Update a meal plan
PUT http://localhost:8000/api/meal-plans/429
Content-Type: application/json

{
  "nutritionPlanId": 13,
  "dayNumber": 1,
  "mealTime": "breakfast",
  "name": "Updated High Protein Breakfast Bowl",
  "description": "An even more nutritious breakfast with high protein content",
  "calories": 450,
  "protein": 35,
  "carbs": 35,
  "fat": 15,
  "recipe": "Updated recipe: Mix Greek yogurt, protein powder, mixed berries, and assorted nuts. Top with chia seeds and a drizzle of honey."
}

### Delete a meal plan
DELETE http://localhost:8000/api/meal-plans/428


// progress records
###
# Get all progress records
GET http://localhost:8000/api/progress

###
# Get progress record by ID
GET http://localhost:8000/api/progress/3

###
# Get progress records by user ID
GET http://localhost:8000/api/progress/user/4

###
# Create new progress record
POST http://localhost:8000/api/progress
Content-Type: application/json

{
  "userId": 5,
  "date": "2024-03-01",
  "weight": 75.5,
  "bodyFatPercentage": 15.5,
  "chest": 95.0,
  "waist": 80.0,
  "hips": 90.0,
  "arms": 35.0,
  "thighs": 55.0,
  "notes": "Monthly progress check - feeling stronger!"
}

###
# Update progress record
PUT http://localhost:8000/api/progress/1
Content-Type: application/json

{
  "userId": 5,
  "date": "2024-03-01",
  "weight": 74.8,
  "bodyFatPercentage": 15.2,
  "notes": "Updated measurements after morning workout"
}

###
# Delete progress record
DELETE http://localhost:8000/api/progress/1


//workout logs
###
# Get all workout logs
GET http://localhost:8000/api/workout-logs

###
# Get workout log by ID
GET http://localhost:8000/api/workout-logs/2

###
# Get workout logs by user ID
GET http://localhost:8000/api/users/4/workout-logs

###
# Create new workout log
POST http://localhost:8000/api/workout-logs
Content-Type: application/json

{
  "userId": 5,
  "sessionId": 1,
  "date": "2024-11-02T10:00:00Z",
  "duration": 60,
  "caloriesBurned": 300,
  "completed": true,
  "notes": "Great workout session, increased weights on all exercises"
}

###
# Update workout log
PUT http://localhost:8000/api/workout-logs/5
Content-Type: application/json

{
  "userId": 5,
  "sessionId": 1,
  "date": "2024-11-02T10:00:00Z",
  "duration": 75,
  "caloriesBurned": 350,
  "completed": true,
  "notes": "Extended workout session with additional exercises"
}

###
# Delete workout log
DELETE http://localhost:8000/api/workout-logs/5


//exercise logs
###
# Get all exercise logs
GET http://localhost:8000/api/exercise-logs

###
# Get exercise log by ID
GET http://localhost:8000/api/exercise-logs/1

###
# Get exercise logs for a specific workout log
GET http://localhost:8000/api/workout-logs/4/exercises

###
# Create new exercise log
POST http://localhost:8000/api/exercise-logs
Content-Type: application/json

{
  "logId": 1,
  "exerciseId": 1,
  "sets": 3,
  "reps": 12,
  "weight": 60.5,
  "notes": "Increased weight by 2.5kg from last session"
}

###
# Update exercise log
PUT http://localhost:8000/api/exercise-logs/5
Content-Type: application/json

{
  "logId": 1,
  "exerciseId": 1,
  "sets": 4,
  "reps": 10,
  "weight": 62.5,
  "notes": "Feeling stronger, added an extra set"
}

###
# Delete exercise log
DELETE http://localhost:8000/api/exercise-logs/5


//AI plan histories
###
# Get all AI plan histories
GET http://localhost:8000/api/ai-plans-history

###
# Get AI plan history by ID
GET http://localhost:8000/api/ai-plans-history/1

###
# Get AI plan histories by user ID
GET http://localhost:8000/api/ai-plans-history/user/1

###
# Create new AI plan history
POST http://localhost:8000/api/ai-plans-history
Content-Type: application/json

{
  "userId": 1,
  "workoutPlanId": 1,
  "nutritionPlanId": 5,
  "userInputs": {
    "fitnessGoal": "weight_loss",
    "experienceLevel": "beginner",
    "workoutType": "home",
    "dietaryRestrictions": "none"
  },
  "rating": 5,
  "feedback": "Great plan, exactly what I needed!"
}

###
# Update AI plan history
PUT http://localhost:8000/api/ai-plans-history/6
Content-Type: application/json

{
  "userId": 1,
  "userInputs": {
    "fitnessGoal": "muscle_gain",
    "experienceLevel": "intermediate",
    "workoutType": "gym",
    "dietaryRestrictions": "vegetarian"
  },
  "rating": 4,
  "feedback": "Good plan, but needed more variety"
}

###
# Delete AI plan history
DELETE http://localhost:8000/api/ai-plans-history/6


//AI configurations
###
# Get all AI configurations
GET http://localhost:8000/api/ai-configurations

###
# Get AI configuration by ID
GET http://localhost:8000/api/ai-configurations/8

###
# Get AI configuration by goal, level and type
GET http://localhost:8000/api/ai-configurations/match?fitnessGoal=muscle_gain&experienceLevel=intermediate&workoutType=gym

###
# Create new AI configuration
POST http://localhost:8000/api/ai-configurations
Content-Type: application/json

{
  "fitnessGoal": "muscle_gain",
  "experienceLevel": "intermediate",
  "workoutType": "gym",
  "muscleGroupSplit": {
    "day1": "chest_triceps",
    "day2": "back_biceps",
    "day3": "legs_shoulders",
    "day4": "rest",
    "day5": "push",
    "day6": "pull",
    "day7": "legs"
  },
  "exerciseCountRange": {
    "min": 4,
    "max": 6
  },
  "restPeriodRange": {
    "min": 60,
    "max": 90
  },
  "setRanges": {
    "compound": {
      "min": 3,
      "max": 4
    },
    "isolation": {
      "min": 3,
      "max": 4
    }
  },
  "repRanges": {
    "compound": {
      "min": 6,
      "max": 10
    },
    "isolation": {
      "min": 8,
      "max": 12
    }
  }
}

###
# Update AI configuration
PUT http://localhost:8000/api/ai-configurations/22
Content-Type: application/json

{
  "fitnessGoal": "muscle_gain",
  "experienceLevel": "intermediate",
  "workoutType": "gym",
  "muscleGroupSplit": {
    "day1": "push",
    "day2": "pull",
    "day3": "legs",
    "day4": "rest",
    "day5": "upper",
    "day6": "lower",
    "day7": "rest"
  },
  "exerciseCountRange": {
    "min": 5,
    "max": 7
  },
  "restPeriodRange": {
    "min": 45,
    "max": 75
  },
  "setRanges": {
    "compound": {
      "min": 3,
      "max": 4
    },
    "isolation": {
      "min": 3,
      "max": 4
    }
  },
  "repRanges": {
    "compound": {
      "min": 6,
      "max": 10
    },
    "isolation": {
      "min": 8,
      "max": 12
    }
  }
}

###
# Delete AI configuration
DELETE http://localhost:8000/api/ai-configurations/22



//Support Tickets

### Get all support tickets (admin)
GET http://localhost:8000/api/support-tickets
#Authorization: Bearer <admin-token>

### Get tickets by status (admin)
GET http://localhost:8000/api/support-tickets/status/new
#Authorization: Bearer <admin-token>

### Get user's tickets
GET http://localhost:8000/api/users/1/support-tickets
#Authorization: Bearer <user-token>

### Get specific ticket (updates from 'new' to 'open' if viewed by admin)
GET http://localhost:8000/api/support-tickets/1
#Authorization: Bearer <token>

### Create a new support ticket
POST http://localhost:8000/api/support-tickets
Content-Type: application/json
#Authorization: Bearer <user-token>

{
  "userId": 24,
  "subject": "Issue with workout plan",
  "message": "I'm having trouble accessing my workout plan. Could you please help?",
  "category": "workout"
}

### Update a ticket (change status)
PUT http://localhost:8000/api/support-tickets/1
Content-Type: application/json
#Authorization: Bearer <admin-token>

{
  "status": "in_progress",
  "adminResponse": "We're looking into this issue and will get back to you soon."
}

### Mark a ticket as resolved
PUT http://localhost:8000/api/support-tickets/1
Content-Type: application/json
#Authorization: Bearer <admin-token>

{
  "status": "resolved",
  "adminResponse": "This issue has been resolved. Your workout plan should be accessible now."
}

### Close a ticket
PUT http://localhost:8000/api/support-tickets/1
Content-Type: application/json
#Authorization: Bearer <admin-token>

{
  "status": "closed"
}

### Delete a ticket (admin)
DELETE http://localhost:8000/api/support-tickets/1
#Authorization: Bearer <admin-token>